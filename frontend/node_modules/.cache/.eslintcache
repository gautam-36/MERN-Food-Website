[{"C:\\React\\MERN FOOD\\frontend\\src\\index.js":"1","C:\\React\\MERN FOOD\\frontend\\src\\App.js":"2","C:\\React\\MERN FOOD\\frontend\\src\\reportWebVitals.js":"3","C:\\React\\MERN FOOD\\frontend\\src\\page\\Home.js":"4","C:\\React\\MERN FOOD\\frontend\\src\\page\\Newproduct.js":"5","C:\\React\\MERN FOOD\\frontend\\src\\page\\Menu.js":"6","C:\\React\\MERN FOOD\\frontend\\src\\page\\Signup.js":"7","C:\\React\\MERN FOOD\\frontend\\src\\page\\Cart.js":"8","C:\\React\\MERN FOOD\\frontend\\src\\page\\Success.js":"9","C:\\React\\MERN FOOD\\frontend\\src\\page\\login.js":"10","C:\\React\\MERN FOOD\\frontend\\src\\page\\Cancel.js":"11","C:\\React\\MERN FOOD\\frontend\\src\\redux\\index.js":"12","C:\\React\\MERN FOOD\\frontend\\src\\redux\\productSlide.js":"13","C:\\React\\MERN FOOD\\frontend\\src\\component\\Header.js":"14","C:\\React\\MERN FOOD\\frontend\\src\\component\\CardFeature.js":"15","C:\\React\\MERN FOOD\\frontend\\src\\component\\HomeCard.js":"16","C:\\React\\MERN FOOD\\frontend\\src\\component\\cartProduct.js":"17","C:\\React\\MERN FOOD\\frontend\\src\\component\\FilterProduct.js":"18","C:\\React\\MERN FOOD\\frontend\\src\\component\\AllProduct.js":"19","C:\\React\\MERN FOOD\\frontend\\src\\redux\\userSlice.js":"20","C:\\React\\MERN FOOD\\frontend\\src\\utility\\ImagetoBase64.js":"21"},{"size":1673,"mtime":1683799685472,"results":"22","hashOfConfig":"23"},{"size":914,"mtime":1689762336716,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1683718942960,"results":"25","hashOfConfig":"23"},{"size":2895,"mtime":1689654985885,"results":"26","hashOfConfig":"23"},{"size":3695,"mtime":1709789635841,"results":"27","hashOfConfig":"23"},{"size":2164,"mtime":1689655555588,"results":"28","hashOfConfig":"23"},{"size":6166,"mtime":1683747897209,"results":"29","hashOfConfig":"23"},{"size":4247,"mtime":1717476483788,"results":"30","hashOfConfig":"23"},{"size":269,"mtime":1683718942954,"results":"31","hashOfConfig":"23"},{"size":3667,"mtime":1683747874757,"results":"32","hashOfConfig":"23"},{"size":259,"mtime":1683718942947,"results":"33","hashOfConfig":"23"},{"size":285,"mtime":1683718942957,"results":"34","hashOfConfig":"23"},{"size":2510,"mtime":1717471073624,"results":"35","hashOfConfig":"23"},{"size":3944,"mtime":1689654176852,"results":"36","hashOfConfig":"23"},{"size":1802,"mtime":1689656503040,"results":"37","hashOfConfig":"23"},{"size":1088,"mtime":1683829030885,"results":"38","hashOfConfig":"23"},{"size":2119,"mtime":1689656095558,"results":"39","hashOfConfig":"23"},{"size":480,"mtime":1684325338356,"results":"40","hashOfConfig":"23"},{"size":2584,"mtime":1684325828233,"results":"41","hashOfConfig":"23"},{"size":1507,"mtime":1717470064050,"results":"42","hashOfConfig":"23"},{"size":317,"mtime":1683718942962,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oryt15",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\MERN FOOD\\frontend\\src\\index.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\App.js",["118","119","120","121"],[],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Header from \"./component/Header\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useEffect } from \"react\";\r\nimport { setDataProduct } from \"./redux/productSlide\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const productData = useSelector((state) => state.product)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`https://food-backend-mern.onrender.com/product`)\r\n      const resData = await res.json()\r\n      dispatch(setDataProduct(resData))\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <div>\r\n        <Header />\r\n        <main className=\"pt-16 bg-slate-100 min-h-[calc(100vh)]\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\reportWebVitals.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\page\\Home.js",["122","123","124","125","126","127","128","129","130","131"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CardFeature from \"../component/CardFeature\";\r\nimport HomeCard from \"../component/HomeCard\";\r\nimport { GrPrevious, GrNext } from \"react-icons/gr\";\r\nimport FilterProduct from \"../component/FilterProduct\";\r\nimport AllProduct from \"../component/AllProduct\";\r\n\r\n\r\nconst Home = () => {\r\n  const productData = useSelector((state) => state.product.productList);\r\n  console.log(productData)\r\n  const homeProductCartList = productData.slice(1, 5);\r\n\r\n  const loadingArray = new Array(4).fill(null);\r\n  const loadingArrayFeature = new Array(10).fill(null);\r\n\r\n  const slideProductRef = useRef();\r\n  const nextProduct = () => {\r\n    slideProductRef.current.scrollLeft += 200;\r\n  };\r\n  const preveProduct = () => {\r\n    slideProductRef.current.scrollLeft -= 200;\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-2 md:p-4\">\r\n      <div className=\"md:flex gap-4 py-2\">\r\n        <div className=\"md:w-1/2\">\r\n          <div className=\"flex gap-3 bg-slate-300 w-36 px-2 items-center rounded-full\">\r\n            <p className=\"text-sm font-medium text-slate-900\">Fast Delivery</p>\r\n            <img\r\n              src=\"https://cdn-icons-png.flaticon.com/512/2972/2972185.png\"\r\n              className=\"h-7 hover:scale-175 ease-in duration-500\"\r\n            />\r\n          </div>\r\n          <h2 className=\"text-4xl md:text-7xl font-bold py-3\">\r\n            Feeling Hungary {\" \"}\r\n            <span className=\"text-red-600 text-\">Order Now</span>\r\n          </h2>\r\n          <p className=\"py-3 text-base \">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text\r\n            ever since the 1500s, when an unknown printer took a galley of type\r\n            and scrambled it to make a type specimen book. It has survived not\r\n            only five centuries\r\n          </p>\r\n          <button className=\"font-bold bg-red-500 text-slate-200 px-4 py-2 rounded-md\">\r\n            Order Now\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"md:w-1/2 flex flex-wrap gap-5 p-4 justify-center\">\r\n          {homeProductCartList[0]\r\n            ? homeProductCartList.map((el) => {\r\n                return (\r\n                  <HomeCard\r\n                    key={el._id}\r\n                    id={el._id}\r\n                    image={el.image}\r\n                    name={el.name}\r\n                    price={el.price}\r\n                    category={el.category}\r\n                  />\r\n                );\r\n              })\r\n            : loadingArray.map((el, index) => {\r\n                return <HomeCard key={index+\"loading\"} loading={\"Loading...\"} />;\r\n              })}\r\n        </div>\r\n      </div>\r\n\r\n    \r\n      \r\n      <AllProduct heading={\"Your Product\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\page\\Newproduct.js",["132"],[],"import React, { useState } from 'react'\r\nimport { toast } from 'react-hot-toast'\r\nimport { BsCloudUpload } from \"react-icons/bs\"\r\nimport { ImagetoBase64 } from '../utility/ImagetoBase64'\r\n\r\nconst Newproduct = () => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    category: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n    description: \"\"\r\n  })\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    setData((preve) => {\r\n      return {\r\n        ...preve,\r\n        [name]: value\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const uploadImage = async (e) => {\r\n    const data = await ImagetoBase64(e.target.files[0])\r\n    console.log(data)\r\n\r\n    setData((preve) => {\r\n      return {\r\n        ...preve,\r\n        image: data\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    console.log(data)\r\n\r\n    const { name, image, category, price } = data\r\n\r\n    if (name && image && category && price) {\r\n      const fetchData = await fetch(`https://food-backend-mern.onrender.com/uploadProduct`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n\r\n      const fetchRes = await fetchData.json()\r\n\r\n      console.log(fetchRes)\r\n      toast(fetchRes.message)\r\n\r\n      setData(() => {\r\n        return {\r\n          name: \"\",\r\n          category: \"\",\r\n          image: \"\",\r\n          price: \"\",\r\n          description: \"\"\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      toast(\"Enter required Fields\")\r\n    }\r\n\r\n\r\n  }\r\n  return (\r\n    <div className=\"p-4\">\r\n      <form className='m-auto w-full max-w-md  shadow flex flex-col p-3 bg-white' onSubmit={handleSubmit}>\r\n        <label htmlFor='name'>Name</label>\r\n        <input type={\"text\"} name=\"name\" className='bg-slate-200 p-1 my-1' onChange={handleOnChange} value={data.name} />\r\n\r\n        <label htmlFor='category'>Category</label>\r\n        <select className='bg-slate-200 p-1 my-1' id='category' name='category' onChange={handleOnChange} value={data.category}>\r\n          <option value={\"other\"}>select category</option>\r\n          <option value={\"fruits\"}>Fruits</option>\r\n          <option value={\"vegetable\"}>Vegetable</option>\r\n          <option value={\"icream\"}>Icream</option>\r\n          <option value={\"dosa\"}>Dosa</option>\r\n          <option value={\"pizza\"}>Pizza</option>\r\n          <option value={\"rice\"}>rice</option>\r\n          <option value={\"cake\"}>Cake</option>\r\n          <option value={\"burger\"}>Burger</option>\r\n          <option value={\"panner\"}>Panner</option>\r\n          <option value={\"sandwich\"}>Sandwich</option>\r\n        </select>\r\n\r\n        <label htmlFor='image'>Image\r\n          <div className='h-40 w-full bg-slate-200  rounded flex items-center justify-center cursor-pointer'>\r\n            {\r\n              data.image ? <img src={data.image} className=\"h-full\" /> : <span className='text-5xl'><BsCloudUpload /></span>\r\n            }\r\n\r\n            <input type={\"file\"} accept=\"image/*\" id=\"image\" onChange={uploadImage} className=\"hidden\" />\r\n          </div>\r\n        </label>\r\n\r\n\r\n        <label htmlFor='price' className='my-1'>Price</label>\r\n        <input type={\"text\"} className='bg-slate-200 p-1 my-1' name='price' onChange={handleOnChange} value={data.price} />\r\n\r\n        <label htmlFor='description'>Description</label>\r\n        <textarea rows={2} value={data.description} className='bg-slate-200 p-1 my-1 resize-none' name='description' onChange={handleOnChange}></textarea>\r\n\r\n        <button className='bg-red-500 hover:bg-red-600 text-white text-lg font-medium my-2 drop-shadow'>Save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Newproduct","C:\\React\\MERN FOOD\\frontend\\src\\page\\Menu.js",["133"],[],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport AllProduct from \"../component/AllProduct\";\r\nimport { addCartItem } from \"../redux/productSlide\";\r\n\r\nconst Menu = () => {\r\n  const { filterby } = useParams();\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const productData = useSelector((state) => state.product.productList);\r\n\r\n  const productDisplay = productData.filter((el) => el._id === filterby)[0];\r\n\r\n  const handleAddCartProduct = (e) => {\r\n    dispatch(addCartItem(productDisplay))\r\n  };\r\n\r\n  const handleBuy = ()=>{\r\n    dispatch(addCartItem(productDisplay))\r\n      navigate(\"/cart\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 md:p-4\">\r\n      <div className=\"w-full max-w-4xl m-auto md:flex bg-white\">\r\n        <div className=\"max-w-sm  overflow-hidden w-full p-5\">\r\n          <img\r\n            src={productDisplay.image}\r\n            className=\"hover:scale-105 transition-all h-full hover:scale-175 ease-in duration-500\"\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col gap-1\">\r\n          <h3 className=\"font-semibold text-slate-600  capitalize text-2xl md:text-4xl\">\r\n            {productDisplay.name}\r\n          </h3>\r\n          <p className=\" text-slate-500  font-medium text-2xl\">{productDisplay.category}</p>\r\n          <p className=\" font-bold md:text-2xl\">\r\n            <span className=\"text-red-500 \">₹</span>\r\n            <span>{productDisplay.price}</span>\r\n          </p>\r\n          <div className=\"flex gap-3\">\r\n          <button onClick={handleBuy} className=\"bg-yellow-500 py-1 mt-2 rounded hover:bg-yellow-600 min-w-[100px]\">Buy</button>\r\n          <button onClick={handleAddCartProduct} className=\"bg-yellow-500 py-1 mt-2 rounded hover:bg-yellow-600 min-w-[100px]\">Add Cart</button>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-slate-600 font-medium\">Description : </p>\r\n            <p>{productDisplay.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AllProduct heading={\"Related Product\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\page\\Signup.js",["134","135"],[],"import React, { useState } from \"react\";\r\nimport loginSignupImage from \"../assest/login-animation.gif\";\r\nimport { BiShow, BiHide } from \"react-icons/bi\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BsEmojiSmileUpsideDown } from \"react-icons/bs\";\r\nimport { ImagetoBase64 } from \"../utility/ImagetoBase64\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nfunction Signup() {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [data, setData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    image : \"\"\r\n  });\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((preve) => !preve);\r\n  };\r\n  const handleShowConfirmPassword = () => {\r\n    setShowConfirmPassword((preve) => !preve);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((preve) => {\r\n      return {\r\n        ...preve,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleUploadProfileImage = async(e)=>{\r\n      const data = await ImagetoBase64(e.target.files[0])\r\n  \r\n\r\n      setData((preve)=>{\r\n          return{\r\n            ...preve,\r\n            image : data\r\n          }\r\n      })\r\n\r\n  }\r\nconsole.log(process.env.REACT_APP_SERVER_DOMIN)\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const { firstName, email, password, confirmPassword } = data;\r\n    if (firstName && email && password && confirmPassword) {\r\n      if (password === confirmPassword) {\r\n    \r\n        const fetchData = await fetch(`https://food-backend-mern.onrender.com/signup`,{\r\n            method : \"POST\",\r\n            headers : {\r\n              \"content-type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify(data)\r\n          })\r\n\r\n          const dataRes = await fetchData.json()\r\n    \r\n\r\n        // alert(dataRes.message);\r\n        toast(dataRes.message)\r\n        if(dataRes.alert){\r\n          navigate(\"/login\");\r\n        }\r\n       \r\n      } else {\r\n        alert(\"password and confirm password not equal\");\r\n      }\r\n    } else {\r\n      alert(\"Please Enter required fields\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3 md:p-4\">\r\n      <div className=\"w-full max-w-sm bg-white m-auto flex  flex-col p-4\">\r\n        {/* <h1 className='text-center text-2xl font-bold'>Sign up</h1> */}\r\n        <div className=\"w-20 h-20 overflow-hidden rounded-full drop-shadow-md shadow-md m-auto relative \">\r\n          <img src={data.image ? data.image :  loginSignupImage} className=\"w-full h-full\" />\r\n\r\n          <label htmlFor=\"profileImage\">\r\n            <div className=\"absolute bottom-0 h-1/3  bg-slate-500 bg-opacity-50 w-full text-center cursor-pointer\">\r\n              <p className=\"text-sm p-1 text-white\">Upload</p>\r\n            </div>\r\n            <input type={\"file\"} id=\"profileImage\" accept=\"image/*\" className=\"hidden\" onChange={handleUploadProfileImage}/>\r\n          </label>\r\n        </div>\r\n\r\n        <form className=\"w-full py-3 flex flex-col\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type={\"text\"}\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            className=\"mt-1 mb-2 w-full bg-slate-200 px-2 py-1 rounded focus-within:outline-blue-300\"\r\n            value={data.firstName}\r\n            onChange={handleOnChange}\r\n          />\r\n\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type={\"text\"}\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            className=\"mt-1 mb-2 w-full bg-slate-200 px-2 py-1 rounded focus-within:outline-blue-300\"\r\n            value={data.lastName}\r\n            onChange={handleOnChange}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type={\"email\"}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            className=\"mt-1 mb-2 w-full bg-slate-200 px-2 py-1 rounded focus-within:outline-blue-300\"\r\n            value={data.email}\r\n            onChange={handleOnChange}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <div className=\"flex px-2 py-1 bg-slate-200 rounded mt-1 mb-2 focus-within:outline focus-within:outline-blue-300\">\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className=\" w-full bg-slate-200 border-none outline-none \"\r\n              value={data.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            <span\r\n              className=\"flex text-xl cursor-pointer\"\r\n              onClick={handleShowPassword}\r\n            >\r\n              {showPassword ? <BiShow /> : <BiHide />}\r\n            </span>\r\n          </div>\r\n\r\n          <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n          <div className=\"flex px-2 py-1 bg-slate-200 rounded mt-1 mb-2  focus-within:outline focus-within:outline-blue-300\">\r\n            <input\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              id=\"confirmpassword\"\r\n              name=\"confirmPassword\"\r\n              className=\" w-full bg-slate-200 border-none outline-none \"\r\n              value={data.confirmPassword}\r\n              onChange={handleOnChange}\r\n            />\r\n            <span\r\n              className=\"flex text-xl cursor-pointer\"\r\n              onClick={handleShowConfirmPassword}\r\n            >\r\n              {showConfirmPassword ? <BiShow /> : <BiHide />}\r\n            </span>\r\n          </div>\r\n\r\n          <button className=\"w-full max-w-[150px] m-auto  bg-red-500 hover:bg-red-600 cursor-pointer  text-white text-xl font-medium text-center py-1 rounded-full mt-4\">\r\n            Sign up\r\n          </button>\r\n        </form>\r\n        <p className=\"text-left text-sm mt-2\">\r\n          Already have account ?{\" \"}\r\n          <Link to={\"/login\"} className=\"text-red-500 underline\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\page\\Cart.js",["136"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CartProduct from \"../component/cartProduct\";\r\nimport emptyCartImage from \"../assest/empty.gif\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51MpkaWSBDWHFiQ13fwpApR9ghYr5wuMFiypMZvGaasDvxOprBHN2oV8Npx8dLYlK0u4PRTvsf14bY23AR8s6gTgk00vfxFxsfj\");\r\n\r\nconst Cart = () => {\r\n  const productCartItem = useSelector((state) => state.product.cartItem);\r\n  const user = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n\r\n  const totalPrice = productCartItem.reduce(\r\n    (acc, curr) => acc + parseInt(curr.total),\r\n    0\r\n  );\r\n  const totalQty = productCartItem.reduce(\r\n    (acc, curr) => acc + parseInt(curr.qty),\r\n    0\r\n  );\r\n\r\n  const handlePayment = async () => {\r\n    if (user.email) {\r\n      try {\r\n        const stripe = await stripePromise;\r\n\r\n<<<<<<< HEAD\r\n        const res = await fetch(\"https://food-backend-mern.onrender.com/checkout\", {\r\n=======\r\n        const res = await fetch(\"http://localhost:8080/checkout\", {\r\n>>>>>>> e6e82dc8f6524e4c16e3aa266baecb4a77dee8d7\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            items: productCartItem.map((item) => ({\r\n              name: item.name,\r\n              price: item.price,\r\n              quantity: item.qty,\r\n            })),\r\n          }),\r\n        });\r\n\r\n        if (res.status === 500) {\r\n          toast.error(\"Server error. Please try again.\");\r\n          return;\r\n        }\r\n\r\n        const data = await res.json();\r\n        toast(\"Redirecting to payment gateway...\");\r\n\r\n        const result = await stripe.redirectToCheckout({\r\n          sessionId: data.url,\r\n        });\r\n\r\n        if (result.error) {\r\n          toast.error(result.error.message);\r\n        }\r\n      } catch (error) {\r\n        toast.error(\"Payment failed. Please try again.\");\r\n        console.error(\"Error:\", error);\r\n      }\r\n    } else {\r\n      toast(\"You are not logged in!\");\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-2 md:p-4\">\r\n        <h2 className=\"text-lg md:text-2xl font-bold text-slate-600\">\r\n          Your Cart Items\r\n        </h2>\r\n\r\n        {productCartItem.length > 0 ? (\r\n          <div className=\"my-4 flex gap-3\">\r\n            {/* display cart items */}\r\n            <div className=\"w-full max-w-3xl\">\r\n              {productCartItem.map((el) => (\r\n                <CartProduct\r\n                  key={el._id}\r\n                  id={el._id}\r\n                  name={el.name}\r\n                  image={el.image}\r\n                  category={el.category}\r\n                  qty={el.qty}\r\n                  total={el.total}\r\n                  price={el.price}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {/* total cart item */}\r\n            <div className=\"w-full max-w-md ml-auto\">\r\n              <h2 className=\"bg-blue-500 text-white p-2 text-lg\">Summary</h2>\r\n              <div className=\"flex w-full py-2 text-lg border-b\">\r\n                <p>Total Qty :</p>\r\n                <p className=\"ml-auto w-32 font-bold\">{totalQty}</p>\r\n              </div>\r\n              <div className=\"flex w-full py-2 text-lg border-b\">\r\n                <p>Total Price</p>\r\n                <p className=\"ml-auto w-32 font-bold\">\r\n                  <span className=\"text-red-500\">₹</span> {totalPrice}\r\n                </p>\r\n              </div>\r\n              <button\r\n                className=\"bg-red-500 w-full text-lg font-bold py-2 text-white\"\r\n                onClick={handlePayment}\r\n              >\r\n                Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex w-full justify-center items-center flex-col\">\r\n            <img src={emptyCartImage} className=\"w-full max-w-sm\" alt=\"Empty Cart\" />\r\n            <p className=\"text-slate-500 text-3xl font-bold\">Empty Cart</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\page\\Success.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\page\\login.js",["137","138"],[],"import React, { useState } from \"react\";\r\nimport loginSignupImage from \"../assest/login-animation.gif\";\r\nimport { BiShow, BiHide } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsEmojiSmileUpsideDown } from \"react-icons/bs\";\r\nimport {toast} from \"react-hot-toast\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginRedux } from \"../redux/userSlice\";\r\n\r\n\r\nconst Login = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate()  \r\n  const userData = useSelector(state => state)\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((preve) => !preve);\r\n  };\r\n\r\n  const handleOnChange = (e)=>{\r\n    const {name,value} = e.target\r\n    setData((preve)=>{\r\n        return{\r\n            ...preve,\r\n            [name] : value\r\n        }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async(e)=>{\r\n    e.preventDefault()\r\n    const {email,password} = data\r\n    if(email && password ){\r\n      const fetchData = await fetch(`https://food-backend-mern.onrender.com/login`,{\r\n        method : \"POST\",\r\n        headers : {\r\n          \"content-type\" : \"application/json\"\r\n        },\r\n        body : JSON.stringify(data)\r\n      })\r\n\r\n      const dataRes = await fetchData.json()\r\n      console.log(dataRes)\r\n      \r\n      toast(dataRes.message)\r\n      \r\n      if(dataRes.alert){\r\n        dispatch(loginRedux(dataRes))\r\n        setTimeout(() => {\r\n          navigate(\"/\")\r\n        }, 1000);\r\n      }\r\n\r\n      console.log(userData)\r\n    }\r\n    else{\r\n        alert(\"Please Enter required fields\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3 md:p-4\">\r\n    <div className=\"w-full max-w-sm bg-white m-auto flex  flex-col p-4\">\r\n      {/* <h1 className='text-center text-2xl font-bold'>Sign up</h1> */}\r\n      <div className=\"w-20 overflow-hidden rounded-full drop-shadow-md shadow-md m-auto\">\r\n        <img src={loginSignupImage} className=\"w-full\" />\r\n      </div>\r\n\r\n      <form className=\"w-full py-3 flex flex-col\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type={\"email\"}\r\n          id=\"email\"\r\n          name=\"email\"\r\n          className=\"mt-1 mb-2 w-full bg-slate-200 px-2 py-1 rounded focus-within:outline-blue-300\"\r\n          value={data.email}\r\n          onChange={handleOnChange}\r\n\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <div className=\"flex px-2 py-1 bg-slate-200 rounded mt-1 mb-2 focus-within:outline focus-within:outline-blue-300\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            className=\" w-full bg-slate-200 border-none outline-none \"\r\n            value={data.password}\r\n            onChange={handleOnChange}\r\n          />\r\n          <span\r\n            className=\"flex text-xl cursor-pointer\"\r\n            onClick={handleShowPassword}\r\n          >\r\n            {showPassword ? <BiShow /> : <BiHide />}\r\n          </span>\r\n        </div>\r\n\r\n        <button className=\"w-full max-w-[150px] m-auto  bg-red-500 hover:bg-red-600 cursor-pointer  text-white text-xl font-medium text-center py-1 rounded-full mt-4\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p className=\"text-left text-sm mt-2\">\r\n        Don't  have account ?{\" \"}\r\n        <Link to={\"/signup\"} className=\"text-red-500 underline\">\r\n          Sign Up\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\React\\MERN FOOD\\frontend\\src\\page\\Cancel.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\redux\\index.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\redux\\productSlide.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\component\\Header.js",["139","140"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineUserCircle } from \"react-icons/hi\";\r\nimport { BsCartFill } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutRedux } from \"../redux/userSlice\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst Header = () => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const userData = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleShowMenu = () => {\r\n    setShowMenu((preve) => !preve);\r\n  };\r\n  const handleLogout = () => {\r\n    dispatch(logoutRedux());\r\n    toast(\"Logout successfully\");\r\n  };\r\n\r\n  const cartItemNumber = useSelector((state) => state.product.cartItem)\r\n  return (\r\n    <header className=\"fixed shadow-md w-full h-16 px-2 md:px-4 z-50 bg-white\">\r\n      {/* desktop */}\r\n\r\n      <div className=\"flex items-center h-full justify-between\">\r\n        <Link to={\"\"}>\r\n          <div className=\"h-10\">\r\n            <img src=\"https://www.freshmenu.com/images/fm-header-logo.svg\" className=\"h-full\" />\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"flex items-center gap-4 md:gap-7\">\r\n          <nav className=\"gap-4 md:gap-6 text-base md:text-lg hidden md:flex\">\r\n            <Link to={\"\"}>Home</Link>\r\n            <Link to={\"menu/645bcd4cfb4338b29b67f2c3\"}>Menu</Link>  \r\n          </nav>\r\n          <div className=\"text-2xl text-slate-600 relative\">\r\n            <Link to={\"cart\"}>\r\n              <BsCartFill />\r\n              <div className=\"absolute -top-1 -right-1 text-white bg-red-500 h-4 w-4 rounded-full m-0 p-0 text-sm text-center \">\r\n                {cartItemNumber.length}\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\" text-slate-600\" onClick={handleShowMenu}>\r\n            <div className=\"text-3xl cursor-pointer w-8 h-8 rounded-full overflow-hidden drop-shadow-md\">\r\n              {userData.image ? (\r\n                <img src={userData.image} className=\"h-full w-full \" />\r\n              ) : (\r\n                <HiOutlineUserCircle />\r\n              )}\r\n            </div>\r\n            {showMenu && (\r\n              <div className=\"absolute right-2 bg-white py-2  shadow drop-shadow-md flex flex-col min-w-[120px] text-center\">\r\n                {userData.email === \"gautamkumarg660@gmail.com\" && (\r\n                  <Link\r\n                    to={\"newproduct\"}\r\n                    className=\"whitespace-nowrap cursor-pointer px-2\"\r\n                  >\r\n                    New product\r\n                  </Link>\r\n                )}\r\n\r\n                {userData.image ? (\r\n                  <p\r\n                    className=\"cursor-pointer text-white px-2 bg-red-500\"\r\n                    onClick={handleLogout}\r\n                  >\r\n                    Logout ({userData.firstName}){\" \"}\r\n                  </p>\r\n                ) : (\r\n                  <Link\r\n                    to={\"login\"}\r\n                    className=\"whitespace-nowrap cursor-pointer px-2\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                )}\r\n                <nav className=\"text-base md:text-lg flex flex-col md:hidden\">\r\n                  <Link to={\"\"} className=\"px-2 py-1\">\r\n                    Home\r\n                  </Link>\r\n                  <Link\r\n                    to={\"menu/63f0fdbb3bcc2f97fa53d25d\"}\r\n                    className=\"px-2 py-1\"\r\n                  >\r\n                    Menu\r\n                  </Link>\r\n                  <Link to={\"about\"} className=\"px-2 py-1\">\r\n                    About\r\n                  </Link>\r\n                  <Link to={\"contact\"} className=\"px-2 py-1\">\r\n                    Contact\r\n                  </Link>\r\n                </nav>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* mobile */}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\component\\CardFeature.js",["141","142"],[],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addCartItem, increaseQty } from \"../redux/productSlide\";\r\n\r\nconst CardFeature = ({ image, name, price, category, loading, id }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddCartProduct = (e) => {\r\n    dispatch(addCartItem({\r\n      _id: id,\r\n      name: name,\r\n      price: price,\r\n      category: category,\r\n      image: image\r\n    }))\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full min-w-[200px] max-w-[200px] bg-white hover:shadow-lg drop-shadow-lg py-5 px-4 cursor-pointer flex flex-col \">\r\n      {image ? (\r\n        <>\r\n          <Link\r\n            to={`/menu/${id}`}\r\n            onClick={() => window.scrollTo({ top: \"0\", behavior: \"smooth\" })}\r\n          >\r\n            <div className=\"h-28 flex flex-col justify-center items-center\">\r\n              <img src={image} className=\"h-full hover:scale-75 ease-in duration-500\" />\r\n            </div>\r\n            <h3 className=\"font-semibold text-slate-600  capitalize text-lg mt-4 whitespace-nowrap overflow-hidden\">\r\n              {name}\r\n            </h3>\r\n            <p className=\" text-slate-500  font-medium\">{category}</p>\r\n            <p className=\" font-bold\">\r\n              <span className=\"text-red-500\">₹</span>\r\n              <span>{price}</span>\r\n            </p>\r\n          </Link>\r\n          <button\r\n            className=\"bg-yellow-500 py-1 mt-2 rounded hover:bg-yellow-600 w-full\"\r\n            onClick={handleAddCartProduct}\r\n          >\r\n            Add Cart\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div className=\"min-h-[150px] flex justify-center items-center\">\r\n          <p>{loading}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardFeature;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\component\\HomeCard.js",["143"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeCard = ({ name, image, category, price, loading,id }) => {\r\n  return (\r\n    <div className=\"bg-white shadow-md p-2 rounded min-w-[150px]\">\r\n      {name ? (\r\n        <>\r\n        <Link to={`/menu/${id}`} onClick={()=>window.scrollTo({top:\"0\",behavior : \"smooth\"})} >\r\n          <div className=\"w-40 min-h-[150px]\">\r\n              <img src={image} className=\"h-full w-full hover:scale-75 ease-in duration-500\"  />\r\n          </div>\r\n          <h3 className=\"font-semibold text-slate-600 text-center capitalize text-lg\">\r\n            {name}\r\n          </h3>\r\n          <p className=\"text-center text-slate-500  font-medium\">{category}</p>\r\n          <p className=\"text-center font-bold\">\r\n            <span className=\"text-red-500\">₹</span>\r\n            <span>{price}</span>\r\n          </p>\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <div className=\"flex justify-center items-center h-full\">\r\n          <p>{loading}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeCard;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\component\\cartProduct.js",["144"],[],"import React from \"react\";\r\nimport { TbPlus, TbMinus } from \"react-icons/tb\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteCartItem,increaseQty,decreaseQty } from \"../redux/productSlide\";\r\n\r\nconst CartProduct = ({ id, name, image, category, qty, total, price }) => {\r\n    const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"bg-slate-200 p-2 flex gap-4 rounded border border-slate-300\">\r\n      <div className=\"p-3 bg-white rounded overflow-hidden\">\r\n        <img src={image} className=\"h-28 w-40 object-cover hover:scale-75 ease-in duration-500 \" />\r\n      </div>\r\n      <div className=\"flex flex-col gap-1 w-full\">\r\n        <div className=\"flex justify-between\">\r\n          <h3 className=\"font-semibold text-slate-600  capitalize text-lg md:text-xl\">\r\n            {name}\r\n          </h3>\r\n          <div className=\"cursor-pointer text-slate-700 hover:text-red-500\" onClick={()=>dispatch(deleteCartItem(id))}>\r\n            <AiFillDelete />\r\n          </div>\r\n        </div>\r\n        <p className=\" text-slate-500  font-medium \">{category}</p>\r\n        <p className=\" font-bold text-base\">\r\n          <span className=\"text-red-500 \">₹</span>\r\n          <span>{price}</span>\r\n        </p>\r\n        <div className=\"flex justify-between \">\r\n          <div className=\"flex gap-3 items-center\">\r\n            <button onClick={()=>dispatch(increaseQty(id))} className=\"bg-slate-300 py-1 mt-2 rounded hover:bg-slate-400 p-1 \">\r\n              <TbPlus />\r\n            </button>\r\n            <p className=\"font-semibold p-1\">{qty}</p>\r\n            <button\r\n              onClick={()=>dispatch(decreaseQty(id))}\r\n              className=\"bg-slate-300 py-1 mt-2 rounded hover:bg-slate-400 p-1 \"\r\n            >\r\n              <TbMinus />\r\n            </button>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 font-bold text-slate-700\">\r\n            <p>Total :</p>\r\n            <p><span className=\"text-red-500\">₹</span>{total}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartProduct;\r\n","C:\\React\\MERN FOOD\\frontend\\src\\component\\FilterProduct.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\component\\AllProduct.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\redux\\userSlice.js",[],[],"C:\\React\\MERN FOOD\\frontend\\src\\utility\\ImagetoBase64.js",[],[],{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":12},{"ruleId":"145","severity":1,"message":"149","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"150","line":12,"column":9,"nodeType":"147","messageId":"148","endLine":12,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":20,"column":6,"nodeType":"153","endLine":20,"endColumn":8,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"156","line":1,"column":36,"nodeType":"147","messageId":"148","endLine":1,"endColumn":44},{"ruleId":"145","severity":1,"message":"157","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":19},{"ruleId":"145","severity":1,"message":"158","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":20},{"ruleId":"145","severity":1,"message":"159","line":5,"column":22,"nodeType":"147","messageId":"148","endLine":5,"endColumn":28},{"ruleId":"145","severity":1,"message":"160","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":21},{"ruleId":"145","severity":1,"message":"161","line":16,"column":9,"nodeType":"147","messageId":"148","endLine":16,"endColumn":28},{"ruleId":"145","severity":1,"message":"162","line":19,"column":9,"nodeType":"147","messageId":"148","endLine":19,"endColumn":20},{"ruleId":"145","severity":1,"message":"163","line":22,"column":9,"nodeType":"147","messageId":"148","endLine":22,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":32,"column":13,"nodeType":"166","endLine":35,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":99,"column":28,"nodeType":"166","endLine":99,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":28,"column":11,"nodeType":"166","endLine":31,"endColumn":13},{"ruleId":"145","severity":1,"message":"167","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":88,"column":11,"nodeType":"166","endLine":88,"endColumn":94},{"ruleId":null,"fatal":true,"severity":2,"message":"168","line":30,"column":1},{"ruleId":"145","severity":1,"message":"167","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":77,"column":9,"nodeType":"166","endLine":77,"endColumn":58},{"ruleId":"164","severity":1,"message":"165","line":30,"column":13,"nodeType":"166","endLine":30,"endColumn":97},{"ruleId":"164","severity":1,"message":"165","line":50,"column":17,"nodeType":"166","endLine":50,"endColumn":72},{"ruleId":"145","severity":1,"message":"169","line":4,"column":23,"nodeType":"147","messageId":"148","endLine":4,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":28,"column":15,"nodeType":"166","endLine":28,"endColumn":89},{"ruleId":"164","severity":1,"message":"165","line":11,"column":15,"nodeType":"166","endLine":11,"endColumn":97},{"ruleId":"164","severity":1,"message":"165","line":13,"column":9,"nodeType":"166","endLine":13,"endColumn":100},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'productData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'CardFeature' is defined but never used.","'GrPrevious' is defined but never used.","'GrNext' is defined but never used.","'FilterProduct' is defined but never used.","'loadingArrayFeature' is assigned a value but never used.","'nextProduct' is assigned a value but never used.","'preveProduct' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BsEmojiSmileUpsideDown' is defined but never used.","Parsing error: Unexpected token (30:1)","'increaseQty' is defined but never used.",{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch]",{"range":"173","text":"174"},[674,676],"[dispatch]"]